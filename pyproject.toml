[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
# dependencies
SQLAlchemy = { version = "2.0.35" }
grpcio = "1.66.1"
pymysql = "1.1.1"
pydantic = "2.9.2"
pydantic-settings = "2.5.2"
typing-extensions = '4.12.2'
sslog = "0.0.0a45"
protobuf = "5.27.2"

[tool.poetry.group.dev.dependencies]
sqlacodegen = "3.0.0rc5"
# grpc py generator
grpcio-tools = "1.66.1"

# tests
coverage = { version = "==7.6.1", extras = ["toml"] }
pytest = "==8.3.3"
pytest-cov = "5.0.0"
pytest-dotenv = "0.5.2"
pytest-github-actions-annotate-failures = "==0.2.0"
pytest-env = "==1.1.5"
# linter and formatter
pre-commit = "==3.8.0"
mypy = "==1.11.2"
types-protobuf = "^5.27.0.20240920"

[tool.poetry-plugin-bump]
commit_msg = 'bump: v{version}'

[tool.coverage.run]
concurrency = ['thread', 'greenlet']

[tool.coverage.report]
exclude_lines = [
  'pragma: no cover',
  'if TYPE_CHECKING:',
  'if __name__ == "__main__":',
  'raise NotImplementedError'
]

[tool.pytest.ini_options]
addopts = '-rav'
env = ['D:TESTING=true', 'SQLALCHEMY_WARN_20=true']

[tool.mypy]
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
plugins = ['sqlalchemy.ext.mypy.plugin', 'pydantic.mypy']
explicit_package_bases = true

[tool.black]
target_version = ['py310']

extend-exclude = "api/v1"

[tool.ruff]
extend-exclude = [".venv", "api"]
target-version = "py310"

[tool.ruff.lint]
select = [
  "B",
  "C",
  "E",
  "F",
  "G",
  "I",
  "N",
  "Q",
  "S",
  "W",
  "BLE",
  #  "DJ",
  "ERA",
  "EXE",
  "ICN",
  "INP",
  "ISC",
  "NPY",
  #  "DTZ",
  #  "PTH",
  "PD",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "PYI",
  "RET",
  "RSE",
  "RUF",
  "SIM",
  "SLF",
  "TCH",
  "TID",
  "TRY",
  "YTT",
]
ignore = [
  'N806',
  'N802',
  'N803',
  'E501',
  'BLE001',
  'RUF002',
  'S301',
  'S314',
  'S101',
  'N815',
  'S104',
  'C901',
  'ISC003',
  'PLR0913',
  'RUF001',
  'SIM108',
  'TCH003',
  'RUF003',
  'RET504',
  'TRY300',
  'TRY003',
  'TRY201',
  'TRY301',
  'PLR0911',
  'PLR0912',
  'PLR0915',
  'PLR2004',
  'PGH003',
]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"enum.IntEnum".msg = "Always use chii.const.IntEnum"
