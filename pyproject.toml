[build-system]
requires = ["flit-core==3.10.1"]
build-backend = "flit_core.buildapi"

[project]
name = 'rpc'
version = '0'
requires-python = '~=3.10.0'
dependencies = [
  'SQLAlchemy (==2.0.36)',
  'aiomysql (==0.2.0)',
  'grpcio (==1.68.0)',
  'protobuf (==5.28.3)',
  'pydantic (==2.9.2)',
  'pydantic-settings (==2.6.1)',
  'pymysql (==1.1.1)',
  'serialize-php (==0.0.3)',
  'six (==1.16.0)',
  'sslog (==0.0.0a51)',
  'typing-extensions (==4.12.2)',
  'uvicorn[standard] (==0.32.0)',
]

[dependency-groups]
dev = [
  'grpc-stubs (==1.53.0.5)',
  'grpcio-tools (==1.68.0)',
  'mypy (==1.15.0)',
  'pytest (==8.3.3)',
  'pytest-dotenv (==0.5.2)',
  'pytest-env (==1.1.5)',
  'pytest-github-actions-annotate-failures (==0.2.0)',
  'sqlacodegen (==3.0.0rc5)',
  'types-protobuf (==5.29.1.20250208)',
  'types-six (==1.17.0.20241205)',
]

[tool.uv]
package = false

[tool.pytest.ini_options]
addopts = '-rav'
env = ['D:TESTING=true', 'SQLALCHEMY_WARN_20=true']

[tool.mypy]
ignore_missing_imports = false
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
plugins = ['sqlalchemy.ext.mypy.plugin']
explicit_package_bases = true

[tool.black]
target_version = ['py310']
extend-exclude = "api/v1"

[tool.ruff]
extend-exclude = [".venv", "api"]
target-version = "py310"

[tool.ruff.lint]
select = [
  "B",
  "C",
  "E",
  "F",
  "G",
  "I",
  "N",
  "Q",
  "S",
  "W",
  "BLE",
  #  "DJ",
  "ERA",
  "EXE",
  "ICN",
  "INP",
  "ISC",
  "NPY",
  #  "DTZ",
  #  "PTH",
  "PD",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "PYI",
  "RET",
  "RSE",
  "RUF",
  "SIM",
  "SLF",
  "TC",
  "TID",
  "TRY",
  "YTT",
]
ignore = [
  'N806',
  'N802',
  'N803',
  'N999',
  'E501',
  'BLE001',
  'RUF002',
  'S301',
  'S314',
  'S101',
  'N815',
  'S104',
  'C901',
  'ISC003',
  'PLR0913',
  'RUF001',
  'SIM108',
  'TCH003',
  'RUF003',
  'RET504',
  'TRY300',
  'TRY003',
  'TRY201',
  'TRY301',
  'PLR0911',
  'PLR0912',
  'PLR0915',
  'PLR2004',
  'SIM102',
  'TRY002',
  'ERA001',
  'PGH003',
  'INP001',
]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"enum.IntEnum".msg = "Always use chii.const.IntEnum"
